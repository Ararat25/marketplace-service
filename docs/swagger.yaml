basePath: /
definitions:
  controller.ErrorResponse:
    properties:
      error:
        example: error message
        type: string
    type: object
  controller.StatusResponse:
    properties:
      status:
        example: ok
        type: string
    type: object
  controller.authReq:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  controller.createPostReq:
    properties:
      content:
        type: string
      imageUrl:
        type: string
      price:
        type: number
      title:
        type: string
    type: object
  controller.createPostResp:
    properties:
      content:
        type: string
      createdAt:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      price:
        type: number
      title:
        type: string
    type: object
  controller.registerReq:
    properties:
      login:
        example: user123
        type: string
      password:
        example: securePassword
        type: string
    type: object
  controller.registerResp:
    properties:
      login:
        example: user123
        type: string
      userId:
        example: 123e4567-e89b-12d3-a456-426614174000
        type: string
    type: object
  controller.response:
    properties:
      author:
        type: string
      content:
        type: string
      id:
        type: string
      imageUrl:
        type: string
      mine:
        type: boolean
      price:
        type: number
      title:
        type: string
    type: object
  entity.Tokens:
    properties:
      accessToken:
        example: eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxMjNlNDU2Ny1lODliLTEyZDMtYTQ1Ni00MjY2MTQxNzQwMDAiLCJhaWQiOiJhYzMzNDhiNy01MGQ3LTQ1NjMtYmE5NS02MzU5OWY5MWQ4NzEiLCJleHAiOjE3NTE5MTk5ODcsImlhdCI6MTc1MTkxOTM4N30.O2ZddFrqUbI33SZ3M5rHYDeJMaYzXrAgk13VP_xJIdIxgOAc-C4qtlGrSDDNqYDcvDWbSfNtJ2JmYm0vC0e8Ug
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Сервис авторизации и размещения объявлений
  title: Marketplace API
  version: "1.0"
paths:
  /api/ads:
    post:
      consumes:
      - application/json
      description: Получает список объявлений с поддержкой пагинации, сортировки и
        фильтрации по цене. Если передан X-Access-Token, отмечает объявления пользователя
        как "mine".
      parameters:
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 10
        description: Количество на странице
        in: query
        name: limit
        type: integer
      - description: 'Поле сортировки: price, title, created_at'
        in: query
        name: sort
        type: string
      - description: 'Порядок сортировки: asc или desc'
        in: query
        name: order
        type: string
      - description: Минимальная цена
        in: query
        name: minPrice
        type: number
      - description: Максимальная цена
        in: query
        name: maxPrice
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: Список объявлений
          schema:
            items:
              $ref: '#/definitions/controller.response'
            type: array
        "500":
          description: Ошибка загрузки объявлений
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Получение списка объявлений
      tags:
      - ads
  /api/auth:
    post:
      consumes:
      - application/json
      description: Принимает логин и пароль, возвращает access и refresh токены в
        заголовках
      parameters:
      - description: Данные для входа
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/controller.authReq'
      produces:
      - application/json
      responses:
        "200":
          description: Успешная авторизация
          headers:
            X-Access-Token:
              description: JWT access токен
              type: string
            X-Refresh-Token:
              description: JWT refresh токен
              type: string
          schema:
            $ref: '#/definitions/controller.StatusResponse'
        "400":
          description: Неверный JSON или тело запроса
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "409":
          description: Неверный логин или пароль
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Авторизация пользователя
      tags:
      - auth
  /api/create:
    post:
      consumes:
      - application/json
      description: Авторизованный пользователь может создать объявление
      parameters:
      - description: Новое объявление
        in: body
        name: ad
        required: true
        schema:
          $ref: '#/definitions/controller.createPostReq'
      produces:
      - application/json
      responses:
        "200":
          description: Объявление успешно создано
          schema:
            $ref: '#/definitions/controller.createPostResp'
        "400":
          description: Некорректные данные
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Создание нового объявления
      tags:
      - ads
  /api/logout:
    post:
      consumes:
      - application/json
      description: Деактивирует текущую сессию пользователя по access токену в заголовке
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь успешно деавторизован
          schema:
            $ref: '#/definitions/controller.StatusResponse'
        "400":
          description: Ошибка деавторизации или отсутствует токен
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Деавторизация пользователя
      tags:
      - auth
  /api/refresh:
    post:
      consumes:
      - application/json
      description: Обновляет access и refresh токены, полученные из заголовков X-Access-Token
        и X-Refresh-Token
      produces:
      - application/json
      responses:
        "200":
          description: Новая пара токенов
          schema:
            $ref: '#/definitions/entity.Tokens'
        "400":
          description: Ошибки валидации или отсутствуют токены
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "401":
          description: Ошибка валидации refresh токена
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Обновить пару токенов
      tags:
      - auth
  /api/register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя с логином и паролем
      parameters:
      - description: Данные пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.registerReq'
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь успешно зарегистрирован
          schema:
            $ref: '#/definitions/controller.registerResp'
        "400":
          description: Некорректный JSON
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
        "409":
          description: Пользователь уже существует
          schema:
            $ref: '#/definitions/controller.ErrorResponse'
      summary: Регистрация нового пользователя
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-Access-Token
    type: apiKey
swagger: "2.0"
